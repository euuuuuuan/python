# 실습 설명
# 이번 실습은 코드잇 실행기가 지원되지 않습니다. 자신의 컴퓨터에서 실습을 진행하고, 셀프 채점 버튼을 눌러 채점해 보세요.
# 이번에는 유저에게 숫자 3개를 입력 받는 take_guess() 함수를 작성하겠습니다. 이 함수는 유저에게 숫자 3개를 반복적으로 입력 받은 후, 유저가 입력한 숫자들을 리스트에 정리해서 리턴합니다. 유저가 범위에서 벗어나는 숫자를 입력하면, 범위를 벗어나는 숫자입니다. 다시 입력하세요.라는 메시지가 출력되고 다시 입력을 받습니다. 마찬가지로 유저가 이미 입력한 숫자를 다시 입력하면, 중복되는 숫자입니다. 다시 입력하세요.라는 메시지가 출력되고 다시 입력을 받습니다.
#
# take_guess() 함수는 결과적으로 리스트를 리턴해야 합니다. 기억해 주세요!
#
# 실습 결과
#
# print(take_guess())
#
# 숫자 3개를 하나씩 차례대로 입력하세요.
# 1번째 숫자를 입력하세요: 5
# 2번째 숫자를 입력하세요: 11
# 범위를 벗어나는 숫자입니다. 다시 입력하세요.
# 2번째 숫자를 입력하세요: 7
# 3번째 숫자를 입력하세요: 5
# 중복되는 숫자입니다. 다시 입력하세요.
# 3번째 숫자를 입력하세요: 3
# [5, 7, 3]

# 해설
# 유저가 입력한 숫자 3개를 보관할 리스트를 먼저 정의합시다.
#
#
# new_guess = []
# 우리는 이 리스트에 숫자 3개를 넣으려고 하는 거니까, 리스트에 숫자가 3개 미만인 경우 반복적으로 유저 입력을 받겠습니다.
#
#
# while len(new_guess) < 3:
# while문의 수행 부분에서는 무엇을 해야 할까요?
#
# 유저에게 숫자를 입력 받는다.
# 숫자가 0보다 작거나 9보다 크면, 범위에서 벗어난다는 메시지를 출력한다.
# 숫자가 이미 리스트 new_guess에 있으면, 중복되는 숫자라는 메시지를 출력한다.
# 범위에서 벗어나지도 않고 중복되지도 않으면, 숫자를 리스트 new_guess에 추가한다.
# 이걸 코드로 표현하면 이렇습니다.
#
#
# while len(new_guess) < 3:
#     new_num = int(input("{}번째 숫자를 입력하세요: ".format(len(new_guess) + 1)))
#
#     if new_num < 0 or new_num > 9:
#         print("범위를 벗어나는 숫자입니다. 다시 입력하세요.")
#     elif new_num in new_guess:
#         print("중복되는 숫자입니다. 다시 입력하세요.")
#     else:
#         new_guess.append(new_num)
# 모범 답안
#
# def take_guess():
#     print("숫자 3개를 하나씩 차례대로 입력하세요.")
#
#     new_guess = []
#     while len(new_guess) < 3:
#         new_num = int(input("{}번째 숫자를 입력하세요: ".format(len(new_guess) + 1)))
#
#         if new_num < 0 or new_num > 9:
#             print("범위를 벗어나는 숫자입니다. 다시 입력하세요.")
#         elif new_num in new_guess:
#             print("중복되는 숫자입니다. 다시 입력하세요.")
#         else:
#             new_guess.append(new_num)
#
#     return new_guess
#
#
# # 테스트 코드
# print(take_guess())